This is the README file for the programme to solve Euler problem 59.

Given is an English text XOR-encrypted by a 3 letter key. Asked is the sum of the ASCII codes in the original deciphered text.

Approach is that the most common character is a space (ASCII code 32). So split the text into 3 lists, one for each key, and look for the code that occurs the most. 
Most likely this is a space. XOR the most frequent code with the ASCII character for space (32) to find the key for each position, and then XOR the 3 lists with the keys just found.

Output (manually added line breaks in this file):
An extract taken from the introduction of one of Euler's most celebrated papers, "De summis serierum reciprocarum" [On the sums of series of reciprocals]: 
I have recently found, quite unexpectedly, an elegant expression for the entire sum of this series 1 + 1/4 + 1/9 + 1/16 + etc., which depends on the quadrature of the circle, 
so that if the true sum of this series is obtained, from it at once the quadrature of the circle follows. 
Namely, I have found that the sum of this series is a sixth part of the square of the perimeter of the circle whose diameter is 1; 
or by putting the sum of this series equal to s, it has the ratio sqrt(6) multiplied by s to 1 of the perimeter to the diameter. 
I will soon show that the sum of this series to be approximately 1.644934066842264364; and from multiplying this number by six, 
and then taking the square root, the number 3.141592653589793238 is indeed produced, which expresses the perimeter of a circle whose diameter is 1. 
Following again the same steps by which I had arrived at this sum, 
I have discovered that the sum of the series 1 + 1/16 + 1/81 + 1/256 + 1/625 + etc. also depends on the quadrature of the circle. 
Namely, the sum of this multiplied by 90 gives the biquadrate (fourth power) of the circumference of the perimeter of a circle whose diameter is 1. 
And by similar reasoning I have likewise been able to determine the sums of the subsequent series in which the exponents are even numbers.

result =  129448
0.037436178  seconds
